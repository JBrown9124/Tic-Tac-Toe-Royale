# Generated by Django 3.2.9 on 2022-03-05 18:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('win_by', models.IntegerField(null=True)),
                ('size', models.IntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('who_turn', models.CharField(max_length=60)),
                ('new_power_up_id', models.IntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lobby',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PowerUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('name', models.CharField(max_length=60)),
                ('description', models.TextField(max_length=255)),
                ('img_url', models.URLField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Win',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=60)),
                ('who_won', models.CharField(max_length=60)),
                ('game_status_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tic_tac_toe_backend.gamestatus')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WinningMove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('move_id', models.IntegerField(null=True)),
                ('win_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tic_tac_toe_backend.win')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PowerUpConstraints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('affects_caster', models.BooleanField(default=False)),
                ('direction', models.CharField(max_length=60)),
                ('cast_anywhere', models.BooleanField(default=False)),
                ('must_be_empty_tile', models.BooleanField(default=False)),
                ('area_shape', models.CharField(max_length=60)),
                ('power_up_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tic_tac_toe_backend.powerup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lobby_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tic_tac_toe_backend.lobby')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('piece', models.CharField(max_length=200)),
                ('is_host', models.BooleanField(default=False)),
                ('is_loaded', models.BooleanField(default=False)),
                ('is_ready', models.BooleanField(default=False)),
                ('players_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tic_tac_toe_backend.players')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewMove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.CharField(max_length=60)),
                ('row_idx', models.IntegerField()),
                ('column_idx', models.IntegerField()),
                ('game_status_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tic_tac_toe_backend.gamestatus')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Moves',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.CharField(max_length=60)),
                ('row_idx', models.IntegerField()),
                ('column_idx', models.IntegerField()),
                ('is_fire', models.BooleanField(default=False)),
                ('board_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tic_tac_toe_backend.board')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_up_id', models.IntegerField(null=True)),
                ('inventory_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tic_tac_toe_backend.inventory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='inventory',
            name='player_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tic_tac_toe_backend.player'),
        ),
        migrations.AddField(
            model_name='gamestatus',
            name='lobby_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tic_tac_toe_backend.lobby'),
        ),
        migrations.CreateModel(
            name='BoardColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('r', models.IntegerField(null=True)),
                ('g', models.IntegerField(null=True)),
                ('b', models.IntegerField(null=True)),
                ('a', models.IntegerField(null=True)),
                ('board_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tic_tac_toe_backend.board')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='board',
            name='lobby_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tic_tac_toe_backend.lobby'),
        ),
    ]
